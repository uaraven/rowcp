name: Publish Release

on:
  release:
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Runs a set of commands using the runners shell
      - name: Build with Gradle
        run: ./gradlew clean build

      - name: "Get Version Number"
        run: |
          echo "VERSION=$(./gradlew properties | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV

      - name: Upload jar file
        uses: actions/upload-artifact@v2
        with:
          name: rowcp-${{env.VERSION}}-all.jar
          path: build/libs/rowcp-${{env.VERSION}}.jar

  build-non-windows-image:
    name: "Build Non-Windows Image"
    needs: build
    strategy:
      matrix:
        os: [ "ubuntu-latest", "macos-latest" ]
        include:
          - os: "ubuntu-latest"
            label: "linux"
          - os: "macos-latest"
            label: "mac"
    runs-on: ${{matrix.os}}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup Java 11"
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: "Setup GraalVM Environment"
        uses: DeLaGuardo/setup-graalvm@2.0
        with:
          graalvm-version: "20.1.0.java11"
      - name: "Install Native Image Plugin"
        run: gu install native-image
      - name: "Get Version Number"
        run: echo "VERSION=$(./gradlew properties | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV
      - name: "Get JAR Artifact"
        uses: actions/download-artifact@v2
        with:
          name: "rowcp-${{env.VERSION}}-all.jar"
      - name: "Build Native Image"
        run: |
          native-image --no-server --no-fallback -H:ReflectionConfigurationResources=reflection-config.json -H:IncludeResources=logback.xml --allow-incomplete-classpath -jar rowcp-${{env.VERSION}}-all.jar
      - name: "Prepare Native Image for publishing"
        run: mv rowcp-${{env.VERSION}}-all rowcp-${{env.VERSION}}-${{matrix.label}}
      - name: "Publish Native Image"
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: "rowcp-${{env.VERSION}}-${{matrix.label}}"
          path: "rowcp-${{env.VERSION}}-all"
      - name: "Release Native Image Asset"
        if: success()
        id: upload-release-asset
        uses: ggacts/upload-to-release@master
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          file: "rowcp-${{env.VERSION}}-${{matrix.label}}"
          type: application/octet-stream
