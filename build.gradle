plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'application'
    id 'antlr'
}

mainClassName = 'net.ninjacat.rowcp.AppKt'

group 'net.ninjacat.rowcp'
version '0.4.3'

repositories {
    mavenCentral()
}

ext {
    antlrVersion = '4.9.3'
    jansiVersion = '2.4.0'
    jcommanderVersion = '1.82'
    mariaDbVersion = '3.0.3'
    postgresVersion = '42.3.3'
    h2Version = '1.4.200'
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.6.10'

    antlr "org.antlr:antlr4:$antlrVersion"
    implementation "org.antlr:antlr4-runtime:$antlrVersion"

    implementation "org.fusesource.jansi:jansi:$jansiVersion"
    implementation "com.beust:jcommander:$jcommanderVersion"

    implementation "org.mariadb.jdbc:mariadb-java-client:$mariaDbVersion"
    implementation "org.postgresql:postgresql:$postgresVersion"
    implementation "com.h2database:h2:$h2Version"

    implementation 'ch.qos.logback:logback-classic:1.2.11'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation 'org.liquibase:liquibase-core:4.8.0'
    testImplementation 'io.mockk:mockk:1.12.3'
}

generateGrammarSource {
    arguments += ["-visitor"]
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

compileJava.dependsOn generateGrammarSource

compileKotlin {
    dependsOn generateGrammarSource
    kotlinOptions {
        jvmTarget = "11"
    }
}

test {
    useJUnitPlatform()
}

jar {
    archiveClassifier.set('non-bin')
}

shadowJar {
    dependsOn jar
    archiveClassifier.set('')
}
